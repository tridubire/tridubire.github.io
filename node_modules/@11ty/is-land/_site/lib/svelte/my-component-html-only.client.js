/* ./lib/svelte/my-component-html-only.svelte generated by Svelte v3.55.1 */
import {
	SvelteComponent,
	append_hydration,
	attr,
	children,
	claim_element,
	claim_text,
	detach,
	element,
	init,
	insert_hydration,
	noop,
	safe_not_equal,
	set_data,
	text
} from "https://unpkg.com/svelte@3.48.0/internal/index.mjs";

function create_fragment(ctx) {
	let h1;
	let t0;
	let t1;

	return {
		c() {
			h1 = element("h1");
			t0 = text("Hello ");
			t1 = text(/*name*/ ctx[0]);
			this.h();
		},
		l(nodes) {
			h1 = claim_element(nodes, "H1", { class: true });
			var h1_nodes = children(h1);
			t0 = claim_text(h1_nodes, "Hello ");
			t1 = claim_text(h1_nodes, /*name*/ ctx[0]);
			h1_nodes.forEach(detach);
			this.h();
		},
		h() {
			attr(h1, "class", "svelte-1p055w5");
		},
		m(target, anchor) {
			insert_hydration(target, h1, anchor);
			append_hydration(h1, t0);
			append_hydration(h1, t1);
		},
		p(ctx, [dirty]) {
			if (dirty & /*name*/ 1) set_data(t1, /*name*/ ctx[0]);
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(h1);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { name = 'from Svelte' } = $$props;

	$$self.$$set = $$props => {
		if ('name' in $$props) $$invalidate(0, name = $$props.name);
	};

	return [name];
}

class My_component_html_only extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { name: 0 });
	}
}

export default My_component_html_only;