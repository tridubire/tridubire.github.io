/* ./lib/svelte/my-component-js-only.svelte generated by Svelte v3.55.1 */
import {
	SvelteComponent,
	append,
	append_styles,
	attr,
	detach,
	element,
	init,
	insert,
	listen,
	noop,
	safe_not_equal,
	set_data,
	space,
	text
} from "https://unpkg.com/svelte@3.48.0/internal/index.mjs";

function add_css(target) {
	append_styles(target, "svelte-v24ii", "h1.svelte-v24ii{color:red }");
}

function create_fragment(ctx) {
	let h1;
	let t0;
	let t1;
	let t2;
	let button;
	let t3;
	let t4;
	let t5;
	let t6_value = (/*count*/ ctx[1] === 1 ? 'time' : 'times') + "";
	let t6;
	let mounted;
	let dispose;

	return {
		c() {
			h1 = element("h1");
			t0 = text("Hello ");
			t1 = text(/*name*/ ctx[0]);
			t2 = space();
			button = element("button");
			t3 = text("Clicked ");
			t4 = text(/*count*/ ctx[1]);
			t5 = space();
			t6 = text(t6_value);
			attr(h1, "class", "svelte-v24ii");
		},
		m(target, anchor) {
			insert(target, h1, anchor);
			append(h1, t0);
			append(h1, t1);
			insert(target, t2, anchor);
			insert(target, button, anchor);
			append(button, t3);
			append(button, t4);
			append(button, t5);
			append(button, t6);

			if (!mounted) {
				dispose = listen(button, "click", /*handleClick*/ ctx[2]);
				mounted = true;
			}
		},
		p(ctx, [dirty]) {
			if (dirty & /*name*/ 1) set_data(t1, /*name*/ ctx[0]);
			if (dirty & /*count*/ 2) set_data(t4, /*count*/ ctx[1]);
			if (dirty & /*count*/ 2 && t6_value !== (t6_value = (/*count*/ ctx[1] === 1 ? 'time' : 'times') + "")) set_data(t6, t6_value);
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(h1);
			if (detaching) detach(t2);
			if (detaching) detach(button);
			mounted = false;
			dispose();
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { name = 'world' } = $$props;
	let count = 0;

	function handleClick() {
		$$invalidate(1, count += 1);
	}

	$$self.$$set = $$props => {
		if ('name' in $$props) $$invalidate(0, name = $$props.name);
	};

	return [name, count, handleClick];
}

class My_component_js_only extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { name: 0 }, add_css);
	}
}

export default My_component_js_only;